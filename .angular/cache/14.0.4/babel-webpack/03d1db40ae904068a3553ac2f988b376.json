{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\"; // export class AnimeSearchComponent {\n//   count$: Observable<number>;\n//   constructor(private store: Store<{ count: number }>) {\n//     this.count$ = store.select('count');\n//   }\n//   increment() {\n//     this.store.dispatch(increment());\n//   }\n//   decrement() {\n//     this.store.dispatch(decrement());\n//   }\n//   reset() {\n//     this.store.dispatch(reset());\n//   }\n// }\n\nexport class AnimeSearchComponent {\n  constructor(store) {\n    this.store = store;\n    this.movies$ = this.store.select(state => state.movies);\n  }\n\n  ngOnInit() {\n    // this.movieService.getAll().subscribe((movies) => (this.movies = movies));\n    this.store.dispatch({\n      type: \"[Movies Page] Load Movies\"\n    });\n  }\n\n}\n\nAnimeSearchComponent.ɵfac = function AnimeSearchComponent_Factory(t) {\n  return new (t || AnimeSearchComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\n\nAnimeSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AnimeSearchComponent,\n  selectors: [[\"app-anime-search\"]],\n  decls: 9,\n  vars: 3,\n  consts: [[\"id\", \"increment\", 3, \"click\"], [\"id\", \"decrement\", 3, \"click\"], [\"id\", \"reset\", 3, \"click\"]],\n  template: function AnimeSearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function AnimeSearchComponent_Template_button_click_0_listener() {\n        return ctx.increment();\n      });\n      i0.ɵɵtext(1, \"Increment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\");\n      i0.ɵɵtext(3);\n      i0.ɵɵpipe(4, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function AnimeSearchComponent_Template_button_click_5_listener() {\n        return ctx.decrement();\n      });\n      i0.ɵɵtext(6, \"Decrement\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AnimeSearchComponent_Template_button_click_7_listener() {\n        return ctx.reset();\n      });\n      i0.ɵɵtext(8, \"Reset Counter\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\"Current Count: \", i0.ɵɵpipeBind1(4, 1, ctx.count$), \"\");\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";mCAUA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA,OAAM,MAAOA,oBAAP,CAA2B;EAG/BC,YAAoBC,KAApB,EAAqD;IAAjC;IAFpB,eAA+B,KAAKA,KAAL,CAAWC,MAAX,CAAmBC,KAAD,IAAWA,KAAK,CAACC,MAAnC,CAA/B;EAEyD;;EAEzDC,QAAQ;IACN;IACA,KAAKJ,KAAL,CAAWK,QAAX,CAAoB;MAAEC,IAAI,EAAE;IAAR,CAApB;EACD;;AAR8B;;;mBAApBR,sBAAoBS;AAAA;;;QAApBT;EAAoBU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MC7BjCL;MAAuBA;QAAA,OAASM,eAAT;MAAoB,CAApB;MAAsBN;MAASA;MAEtDA;MAAKA;;MAAmCA;MAExCA;MAAuBA;QAAA,OAASM,eAAT;MAAoB,CAApB;MAAsBN;MAASA;MAEtDA;MAAmBA;QAAA,OAASM,WAAT;MAAgB,CAAhB;MAAkBN;MAAaA;;;;MAJ7CA;MAAAA","names":["AnimeSearchComponent","constructor","store","select","state","movies","ngOnInit","dispatch","type","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\EDAMAMA\\Desktop\\NgRx-simple-API-call\\src\\app\\anime-search\\anime-search.component.ts","C:\\Users\\EDAMAMA\\Desktop\\NgRx-simple-API-call\\src\\app\\anime-search\\anime-search.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { increment, decrement, reset } from \"../app.actions\";\r\nimport { Anime } from \"./anime\";\r\n\r\n@Component({\r\n  selector: \"app-anime-search\",\r\n  templateUrl: \"./anime-search.component.html\",\r\n})\r\n// export class AnimeSearchComponent {\r\n//   count$: Observable<number>;\r\n\r\n//   constructor(private store: Store<{ count: number }>) {\r\n//     this.count$ = store.select('count');\r\n//   }\r\n\r\n//   increment() {\r\n//     this.store.dispatch(increment());\r\n//   }\r\n\r\n//   decrement() {\r\n//     this.store.dispatch(decrement());\r\n//   }\r\n\r\n//   reset() {\r\n//     this.store.dispatch(reset());\r\n//   }\r\n// }\r\nexport class AnimeSearchComponent implements OnInit {\r\n  movies$: Observable<Anime[]> = this.store.select((state) => state.movies);\r\n\r\n  constructor(private store: Store<{ movies: Anime[] }>) {}\r\n\r\n  ngOnInit(): void {\r\n    // this.movieService.getAll().subscribe((movies) => (this.movies = movies));\r\n    this.store.dispatch({ type: \"[Movies Page] Load Movies\" });\r\n  }\r\n}\r\n\r\n/*\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://github.com/ngrx/platform\r\n*/\r\n","<button id=\"increment\" (click)=\"increment()\">Increment</button>\r\n\r\n<div>Current Count: {{ count$ | async }}</div>\r\n\r\n<button id=\"decrement\" (click)=\"decrement()\">Decrement</button>\r\n\r\n<button id=\"reset\" (click)=\"reset()\">Reset Counter</button>\r\n\r\n\r\n<!-- \r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://github.com/ngrx/platform\r\n-->"]},"metadata":{},"sourceType":"module"}